{"version":3,"file":"static/js/810.e83d77e5.chunk.js","mappings":"6LAKA,MAsDA,EAtDqBA,KACnB,MAAMC,GAAMC,EAAAA,EAAAA,WAEZC,EAAAA,EAAAA,IAASC,IACPH,EAAII,QAAQC,SAASC,IAAoB,GAAhBH,EAAMI,MAAMC,EAAQ,GAAoB,GAAjBL,EAAMI,MAAME,GAC5D,MAAMC,EAASP,EAAMI,MAAME,EAAIE,KAAKC,GAAM,EACpCC,EAASV,EAAMI,MAAMC,EAAIG,KAAKC,GAAM,EACpCE,EAASX,EAAMI,MAAMC,EAAIG,KAAKC,GAAM,EAE1CZ,EAAII,QAAQW,SAAST,IAAII,EAAOG,EAAOC,EAAM,IAI/C,MAAME,EAAeA,KACnB,MAAMC,EAAW,IAAIC,EAAAA,iBACnB,GACA,GACA,GACA,IACA,GACA,EACA,GAIF,OADAD,EAASE,QAAQR,KAAKC,GAAK,IAEzBQ,EAAAA,EAAAA,KAAA,QAAMH,SAAUA,EAASI,UACvBD,EAAAA,EAAAA,KAAA,wBACEE,aAAc,GACdC,UAAW,EACXC,UAAW,EACXC,gBAAiB,EACjBC,MAAM,UACNC,KAAMT,EAAAA,WACNU,WAAW,KAER,EAIX,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAT,SAAA,EACED,EAAAA,EAAAA,KAACJ,EAAY,KACbI,EAAAA,EAAAA,KAACW,EAAAA,QAAQ,CACPC,IAAKhC,EACLiC,SAAU,CAAEC,YAAa,KACzBR,MAAO,SACPH,UAAW,GACXY,SAAU,CAAEC,KAAM,oBAEnB,C","sources":["components/PlayPlatform/PlayPlatform.jsx"],"sourcesContent":["import * as THREE from 'three';\nimport Platform from '../Platform/Platform';\nimport { useRef } from 'react';\nimport { useFrame } from '@react-three/fiber';\n\nconst PlayPlatform = () => {\n  const api = useRef();\n\n  useFrame(state => {\n    api.current.position.set(state.mouse.x * 40, 3, state.mouse.y * -40);\n    const tiltX = (state.mouse.y * Math.PI) / 8; // Нахил по осі X\n    const tiltY = (state.mouse.x * Math.PI) / 8; // Нахил по осі Y\n    const tiltZ = (state.mouse.x * Math.PI) / 8; // Нахил по осі Z\n\n    api.current.rotation.set(tiltX, tiltY, tiltZ);\n  });\n\n  // Функція для створення половини циліндра\n  const HalfCylinder = () => {\n    const geometry = new THREE.CylinderGeometry(\n      40,\n      40,\n      0.4,\n      128,\n      1,\n      true,\n      0\n      // Math.PI\n    );\n    geometry.rotateY(Math.PI / 2);\n    return (\n      <mesh geometry={geometry}>\n        <meshPhysicalMaterial\n          transmission={0.1}\n          roughness={0}\n          thickness={0}\n          envMapIntensity={4}\n          color=\"#ff0022\"\n          side={THREE.DoubleSide}\n          openEnded={true}\n        />\n      </mesh>\n    );\n  };\n\n  return (\n    <>\n      <HalfCylinder />\n      <Platform\n        ref={api}\n        material={{ restitution: 1.3 }}\n        color={0xc71585}\n        roughness={10}\n        userData={{ type: 'playPlatform' }}\n      />\n    </>\n  );\n};\n\nexport default PlayPlatform;\n"],"names":["PlayPlatform","api","useRef","useFrame","state","current","position","set","mouse","x","y","tiltX","Math","PI","tiltY","tiltZ","rotation","HalfCylinder","geometry","THREE","rotateY","_jsx","children","transmission","roughness","thickness","envMapIntensity","color","side","openEnded","_jsxs","_Fragment","Platform","ref","material","restitution","userData","type"],"sourceRoot":""}